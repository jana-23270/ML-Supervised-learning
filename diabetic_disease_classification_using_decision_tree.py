# -*- coding: utf-8 -*-
"""Diabetic disease classification using Decision tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jZv_DtWBae-1iL5U3sTMTKTULag1MFz_
"""

import numpy as np
import pandas as pd

import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('/content/diabetes.csv')
df.head(50)

df.tail(2)

df.shape

df.info(3)

df.describe()

a=df['Glucose']
plt.plot(a)

a=df['Age']
plt.plot(a)

b=df['BloodPressure']
c=df['Insulin']
plt.scatter(b,c)

d=df['DiabetesPedigreeFunction']
plt.bar(d,width=100,height=100)

e=df['BloodPressure']
plt.hist(e)

f=df['Glucose']
plt.pie(f)

a=df['Pregnancies']
b=df['Insulin']
sns.lineplot(x=a,y=b,data=df)

c=df['BloodPressure']
d=df['DiabetesPedigreeFunction']
sns.scatterplot(x=c,y=d,data=df)

e=df['Pregnancies']
f=df['BMI']
sns.barplot(x=e,y=f,data=df)

sns.countplot(x='Pregnancies',data=df)

sns.pairplot(df,hue='BloodPressure')

x=[25,34,56,5,80,25,100,40]
y=[10,20,30,40,50,60,70,80]
sns.distplot(x,y)

df.isnull().sum()

a=df['DiabetesPedigreeFunction']
sns.boxplot(a)

X=df.drop('Outcome',axis=1)

X

y=df['Outcome']

y

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.20,random_state=0)

x_train.shape

x_test.shape

from sklearn.preprocessing import StandardScaler

a=StandardScaler()

x=a.fit_transform(x_train)

X

from sklearn.tree import DecisionTreeClassifier

b =DecisionTreeClassifier(criterion='entropy')
b.fit(x_train,y_train)

pred=b.predict(x_test)

from sklearn.metrics import accuracy_score

accuracy_score(pred,y_test)

from sklearn.metrics import confusion_matrix

confusion_matrix(pred,y_test)

from sklearn.tree import export_graphviz
import graphviz

graphviz.Source(export_graphviz(b,feature_names=X.columns,filled=True))

